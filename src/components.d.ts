/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
export namespace Components {
  interface ModalWindow {
    cancelText: string;
    confirmText: string;
    pointerEvents: boolean;
    title: string;
  }
  interface MyComponent {
    /**
     * The text color
     */
    color: string;
    /**
     * The first name
     */
    first: string;
    /**
     * The last name
     */
    last: string;
    /**
     * The middle name
     */
    middle: string;
  }
}
declare global {
  interface HTMLModalWindowElement extends Components.ModalWindow, HTMLStencilElement {}
  var HTMLModalWindowElement: {
    prototype: HTMLModalWindowElement;
    new (): HTMLModalWindowElement;
  };
  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'modal-window': HTMLModalWindowElement;
    'my-component': HTMLMyComponentElement;
  }
}
declare namespace LocalJSX {
  interface ModalWindow {
    cancelText?: string;
    confirmText?: string;
    pointerEvents?: boolean;
    title?: string;
  }
  interface MyComponent {
    /**
     * The text color
     */
    color?: string;
    /**
     * The first name
     */
    first?: string;
    /**
     * The last name
     */
    last?: string;
    /**
     * The middle name
     */
    middle?: string;
  }
  interface IntrinsicElements {
    'modal-window': ModalWindow;
    'my-component': MyComponent;
  }
}
export { LocalJSX as JSX };
declare module '@stencil/core' {
  export namespace JSX {
    interface IntrinsicElements {
      'modal-window': LocalJSX.ModalWindow & JSXBase.HTMLAttributes<HTMLModalWindowElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}
